{"version":3,"sources":["components/AuthModal/AuthModal.module.scss","components/Layout/Layout.module.scss","components/LoadingSpinner/LoadingSpinner.module.scss","components/FilmsList/FilmsList.module.scss","components/Filters/Filters.module.scss","utils/constants.js","utils/api.js","store/auth-context.js","components/AuthModal/AuthModal.js","components/AuthModal/index.js","components/Header/index.js","components/Header/Header.js","components/Layout/index.js","components/Layout/Layout.js","components/LoadingSpinner/index.js","components/LoadingSpinner/LoadingSpinner.js","assets/lost-connection.gif","pages/NotFoundPage/index.js","pages/NotFoundPage/NotFoundPage.js","pages/FilmPage/index.js","pages/FilmPage/FilmPage.js","utils/fontawasome.js","components/FilmsListItem/FilmsListItem.js","components/FilmsListItem/index.js","components/FilmsList/index.js","components/FilmsList/FilmsList.js","components/Filters/GenreItem/index.js","components/Filters/GenreItem/GenreItem.js","components/Filters/Genres/index.js","components/Filters/Genres/Genres.js","components/Filters/Pagination/index.js","components/Filters/Pagination/Pagination.js","components/Filters/ReleaseYear/index.js","components/Filters/ReleaseYear/ReleaseYear.js","components/Filters/ResetFilters/index.js","components/Filters/ResetFilters/ResetFilters.js","components/Filters/SortBy/index.js","components/Filters/SortBy/SortBy.js","components/Filters/Filters.js","components/Filters/index.js","hooks/useMovies.js","pages/HomePage/HomePage.js","pages/HomePage/index.js","App.js","index.js","pages/FilmPage/FilmPage.module.scss","components/Filters/Pagination/Pagination.module.scss","pages/NotFoundPage/NotFoundPage.module.scss","components/FilmsListItem/FilmsListItem.module.scss"],"names":["module","exports","API_DOMAIN","API_KEY","ACTION_SEND","ACTION_SUCCESS","ACTION_ERROR","PAGINATION_INCREASE","PAGINATION_DECREASE","IMAGE_DOMAIN","defaultFiltersState","page","sorting","year","genres","GITHUB_HOMEPAGE","ROUTES","NOT_FOUND_PAGE","HOME_PAGE","FILM_PAGE","fetchData","path","a","init","fetch","response","json","data","success","Error","status_message","getFilms","CONSTANTS","getExternalIdByFilmId","id","getFilmById","externalId","imdb_id","getGenres","createRequestToken","request_token","validateWithLogin","login","password","requestToken","initObject","headers","Accept","method","body","JSON","stringify","username","createSession","getUserData","sessionId","getFavoriteFilms","reformatedData","results","map","dataItem","setFavoriteFilm","type","filmId","media_type","media_id","favorite","AuthContext","React","createContext","token","isLoggedIn","logout","userName","setUserName","favoriteFilms","setFavoriteFilms","films","AuthContextProvider","props","initialToken","initialUserName","storedData","Cookies","get","useState","setToken","fetchFavorites","useCallback","useEffect","userIsLoggedIn","logoutHandler","remove","contextValue","set","Provider","value","children","schema","yup","shape","required","min","AuthModal","isFetching","setIsFetching","error","setError","authCtx","useContext","onChangeHandler","undefined","authenticationHandler","newSession","session_id","userData","onHideModal","message","Modal","show","modalIsShown","onHide","Header","closeButton","Title","Body","validationSchema","onSubmit","initialValues","handleSubmit","handleChange","values","errors","Form","noValidate","onChange","Group","md","controlId","Label","InputGroup","hasValidation","Control","placeholder","name","isInvalid","Feedback","className","styles","footer","Spinner","animation","Button","variant","Text","href","target","rel","style","color","onShowModal","Navbar","bg","position","zIndex","Container","Nav","fill","Item","Link","as","to","onClick","Layout","layout","LoadingSpinner","spinner","NotFoundPage","Row","image","Image","src","lostConnectionImage","bottomContainer","FilmPage","useParams","filmData","setFilmData","filmReleaseYear","release_date","split","filmReleaseDate","join","fetchFilmData","movie_results","content","xs","Col","poster","poster_path","alt","info","title","originCountry","original_language","overview","background","backdrop_path","library","add","faStarRegular","faStarSolid","FilmsListItem","iconType","isFavorite","Card","card","backdropPath","Img","rating","Footer","icon","FilmsList","memo","filmsList","favoriteFilmHandler","prevState","filter","itemId","removeFavoriteFilmHandler","addFavoriteFilmHandler","status","length","xl","filmItem","includes","vote_average","GenreItem","isSelected","Check","label","checked","onSelect","Genres","allGenresList","selectedGenresList","setGenresFilter","onSelectHandler","genreId","genreItem","Pagination","onClickHandler","changeType","setPageFilter","filteredPage","pagination","buttons","pages","totalPages","ReleaseYear","Select","event","setYearFilter","filteredYear","ResetFilters","resetFilters","SortBy","setSortingFilter","filteredSorting","Filters","setFilters","filters","setPage","prevPage","newPage","setYear","setSorting","setGenres","setFunctions","useMemo","PAGE","YEAR","SORT","GENRES","RESET","setFiltersHandler","filterType","args","propertiesToFilter","setGenresFilterHandler","selectedGenres","sortingValue","releaseYear","curPage","defaultMoviesState","total_pages","moviesReducer","state","action","responseData","errorMessage","useMovies","requestFunction","useReducer","moviesState","dispatch","sendRequest","HomePage","setAllGenresList","fetchGenres","lg","App","setModalIsShown","portalElement","document","getElementById","ReactDOM","createPortal","element","render"],"mappings":"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","file":"static/js/main.0d572bbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"AuthModal_footer__W0l7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__39Zhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__aIaI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsList\":\"FilmsList_filmsList__12wjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__2wBFt\"};","export const API_DOMAIN = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"a61e6e15f8aa4e533051cb627eaa2dd5\";\r\nexport const REGISTRATION_HREF = \"https://www.themoviedb.org/signup\";\r\n\r\nexport const ACTION_SEND = \"SEND\";\r\nexport const ACTION_SUCCESS = \"SUCCESS\";\r\nexport const ACTION_ERROR = \"ERROR\";\r\n\r\nexport const PAGINATION_INCREASE = \"INCREASE\";\r\nexport const PAGINATION_DECREASE = \"DECREASE\";\r\n\r\nexport const IMAGE_DOMAIN = \"https://image.tmdb.org/t/p/w500\";\r\nexport const ERROR_IMAGE_URL = \"https://i.imgur.com/GIeKF0n.png\";\r\n\r\nexport const defaultFiltersState = {\r\n  page: 1,\r\n  sorting: \"popularity.desc\",\r\n  year: 2022,\r\n  genres: [],\r\n};\r\n\r\nexport const GITHUB_HOMEPAGE = \"/KPI-FE-Movies-Project\";\r\n\r\nexport const ROUTES = {\r\n  NOT_FOUND_PAGE: `${GITHUB_HOMEPAGE}/*`,\r\n  HOME_PAGE: `${GITHUB_HOMEPAGE}/`,\r\n  FILM_PAGE: `${GITHUB_HOMEPAGE}/film`,\r\n};\r\n","import * as CONSTANTS from \"./constants\";\r\n\r\nexport async function fetchData(path, init = {}) {\r\n  try {\r\n    const response = await fetch(path, init);\r\n    const data = await response.json();\r\n    if (data.success === false) {\r\n      throw new Error(data.status_message);\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n}\r\n\r\nexport async function getFilms(page, year, sorting, genres) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/discover/movie?api_key=${CONSTANTS.API_KEY}&include_video=false&page=${page}&sort_by=${sorting}&year=${year}&with_genres=${genres}`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function getExternalIdByFilmId(id) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/movie/${id}/external_ids?api_key=${CONSTANTS.API_KEY}`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function getFilmById(id) {\r\n  const { imdb_id: externalId } = await getExternalIdByFilmId(id);\r\n  const path = `${CONSTANTS.API_DOMAIN}/find/${externalId}?api_key=${CONSTANTS.API_KEY}&language=en-US&external_source=imdb_id`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function getGenres() {\r\n  const path = `${CONSTANTS.API_DOMAIN}/genre/movie/list?api_key=${CONSTANTS.API_KEY}`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function createRequestToken() {\r\n  const path = `${CONSTANTS.API_DOMAIN}/authentication/token/new?api_key=${CONSTANTS.API_KEY}`;\r\n  const data = await fetchData(path);\r\n  return data.request_token;\r\n}\r\n\r\nexport async function validateWithLogin(login, password, requestToken) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/authentication/token/validate_with_login?api_key=${CONSTANTS.API_KEY}`;\r\n  const initObject = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      username: login,\r\n      password: password,\r\n      request_token: requestToken,\r\n    }),\r\n  };\r\n  return fetchData(path, initObject);\r\n}\r\n\r\nexport async function createSession(requestToken) {\r\nconst path = `${CONSTANTS.API_DOMAIN}/authentication/session/new?api_key=${CONSTANTS.API_KEY}`;\r\nconst initObject = {\r\n  headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      request_token: requestToken,\r\n    }),\r\n  };\r\n  return fetchData(path, initObject);\r\n}\r\n\r\nexport async function getUserData(sessionId) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/account?api_key=${CONSTANTS.API_KEY}&session_id=${sessionId}`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function getFavoriteFilms(sessionId) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/account/{account_id}/favorite/movies?api_key=${CONSTANTS.API_KEY}&session_id=${sessionId}`;\r\n  const data = await fetchData(path);\r\n  let reformatedData = data.results.map((dataItem) => dataItem.id);\r\n\r\n  return reformatedData;\r\n}\r\n\r\nexport async function setFavoriteFilm(type, filmId, sessionId) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/account/{account_id}/favorite?api_key=${CONSTANTS.API_KEY}&session_id=${sessionId}`;\r\n  const initObject = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      media_type: \"movie\",\r\n      media_id: filmId,\r\n      favorite: type,\r\n    }),\r\n  };\r\n  fetchData(path, initObject);\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { getFavoriteFilms } from \"../utils/api\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n  userName: \"\",\r\n  setUserName: (userName) => {},\r\n  favoriteFilms: [],\r\n  setFavoriteFilms: (films) => {},\r\n});\r\n\r\nconst retrieveStoredData = () => {\r\n  const storedToken = Cookies.get(\"token\");\r\n  const storedUserName = Cookies.get(\"userName\");\r\n\r\n  return {\r\n    token: storedToken,\r\n    userName: storedUserName,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const storedData = retrieveStoredData();\r\n  let initialToken;\r\n  let initialUserName;\r\n\r\n  if (storedData) {\r\n    initialToken = storedData.token;\r\n    initialUserName = storedData.userName;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n  const [userName, setUserName] = useState(initialUserName);\r\n  const [favoriteFilms, setFavoriteFilms] = useState([]);\r\n\r\n  const fetchFavorites = useCallback(async () => {\r\n    if (token) {\r\n      const data = await getFavoriteFilms(token);\r\n      setFavoriteFilms(data);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    fetchFavorites();\r\n  }, [fetchFavorites]);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    Cookies.remove(\"token\");\r\n    Cookies.remove(\"userName\");\r\n  }, []);\r\n\r\n  const loginHandler = (token, userName) => {\r\n    setToken(token);\r\n    Cookies.set(\"token\", token);\r\n    Cookies.set(\"userName\", userName);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    userName,\r\n    setUserName,\r\n    favoriteFilms,\r\n    setFavoriteFilms,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { Formik } from \"formik\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Button, Form, InputGroup, Modal, Spinner } from \"react-bootstrap\";\r\nimport * as yup from \"yup\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport {\r\n  createRequestToken,\r\n  createSession,\r\n  getFavoriteFilms,\r\n  getUserData,\r\n  validateWithLogin,\r\n} from \"../../utils/api\";\r\nimport styles from \"./AuthModal.module.scss\";\r\nimport * as CONSTANTS from \"../../utils/constants\";\r\n\r\nconst schema = yup.object().shape({\r\n  username: yup.string().required(),\r\n  password: yup.string().min(6).required(),\r\n});\r\n\r\nconst AuthModal = (props) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [error, setError] = useState();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const onSubmitHandler = ({ username, password }) => {\r\n    setError(undefined);\r\n    setIsFetching(true);\r\n    authenticationHandler(username, password, setError, setIsFetching);\r\n  };\r\n\r\n  const onChangeHandler = () => {\r\n    setError(undefined);\r\n  };\r\n\r\n  const authenticationHandler = async (\r\n    username,\r\n    password,\r\n    setError,\r\n    setIsFetching\r\n  ) => {\r\n    try {\r\n      const requestToken = await createRequestToken();\r\n\r\n      const validation = await validateWithLogin(\r\n        username,\r\n        password,\r\n        requestToken\r\n      );\r\n\r\n      if (validation.success) {\r\n        const newSession = await createSession(requestToken);\r\n\r\n        if (newSession.success) {\r\n          const sessionId = newSession.session_id;\r\n\r\n          const userData = await getUserData(sessionId);\r\n          const favoriteFilms = await getFavoriteFilms(sessionId);\r\n\r\n          authCtx.setUserName(userData.username);\r\n          authCtx.setFavoriteFilms(favoriteFilms);\r\n          authCtx.login(sessionId, userData.username, favoriteFilms);\r\n          setIsFetching(false);\r\n          props.onHideModal();\r\n        }\r\n      } else {\r\n        setIsFetching(false);\r\n      }\r\n    } catch (error) {\r\n      setIsFetching(false);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.modalIsShown} onHide={props.onHideModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Formik\r\n            validationSchema={schema}\r\n            onSubmit={onSubmitHandler}\r\n            initialValues={{\r\n              username: \"test123test\",\r\n              password: \"test123test\",\r\n            }}\r\n          >\r\n            {({ handleSubmit, handleChange, values, errors }) => (\r\n              <Form\r\n                noValidate\r\n                onSubmit={handleSubmit}\r\n                onChange={onChangeHandler}\r\n              >\r\n                <Form.Group md=\"4\" controlId=\"validationFormikUsername\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <InputGroup hasValidation>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      name=\"username\"\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.username}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.username}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group md=\"4\" controlId=\"validationFormikPassword\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <InputGroup hasValidation>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      name=\"password\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group className={styles.footer}>\r\n                  {error && <p>{error}</p>}\r\n                  {isFetching ? (\r\n                    <Spinner className=\"mx-10 mt-2\" animation=\"grow\" />\r\n                  ) : (\r\n                    <Button\r\n                      className=\"w-100 mt-4\"\r\n                      type=\"submit\"\r\n                      variant=\"outline-dark\"\r\n                    >\r\n                      Sign in\r\n                    </Button>\r\n                  )}\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mt-2\">\r\n                  <Form.Text>Don't have an account yet?</Form.Text>\r\n                  &nbsp;\r\n                  <a\r\n                    className=\"\"\r\n                    href={CONSTANTS.REGISTRATION_HREF}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    style={{ color: \"#6c757d\" }}\r\n                  >\r\n                    Register!\r\n                  </a>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthModal;\r\n","import AuthModal from \"./AuthModal\";\r\n\r\nexport default AuthModal;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header","import { useContext } from \"react\";\r\nimport { Button, Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport { ROUTES } from \"../../utils/constants\";\r\n\r\nconst Header = ({ onShowModal }) => {\r\n  const { isLoggedIn, logout, userName } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      style={{ position: \"relative\", zIndex: 5 }}\r\n    >\r\n      <Container>\r\n        <Nav fill variant=\"tabs\">\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              as={Link}\r\n              to={ROUTES.HOME_PAGE}\r\n              variant=\"outline-light\"\r\n              className=\"user-select-none\"\r\n            >\r\n              Movies Project\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {!isLoggedIn && (\r\n          <Button\r\n            variant=\"outline-light\"\r\n            onClick={onShowModal}\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n        {isLoggedIn && (\r\n          <Button\r\n            variant=\"outline-light\"\r\n            onClick={() => {\r\n              logout(false);\r\n            }}\r\n          >\r\n            <span>Hello, </span>\r\n            <span className=\"text-decoration-underline\">{userName}</span>\r\n            <span>!</span>\r\n          </Button>\r\n        )}\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Layout from \"./Layout\";\r\n\r\nexport default Layout","import Header from \"../Header\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport styles from \"./Layout.module.scss\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <Header onShowModal={props.onShowModal} />\r\n      <main>\r\n        <Container>{props.children}</Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import LoadingSpinner from \"./LoadingSpinner\";\r\n\r\nexport default LoadingSpinner;\r\n","import styles from \"./LoadingSpinner.module.scss\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={styles.spinner} />;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","export default __webpack_public_path__ + \"static/media/lost-connection.83371d69.gif\";","import NotFoundPage from \"./NotFoundPage\";\r\n\r\nexport default NotFoundPage;\r\n","import { Button, Container, Image, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport lostConnectionImage from \"../../assets/lost-connection.gif\";\r\nimport styles from \"./NotFoundPage.module.scss\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <div className={styles.image}>\r\n          <Image src={lostConnectionImage} />\r\n        </div>\r\n        <div className={styles.bottomContainer}>\r\n          <h4>Looks like you're lost</h4>\r\n          <p>the page you are looking for is not available!</p>\r\n          <Link to=\"/\">\r\n            <Button variant=\"outline-dark\">Go Home</Button>\r\n          </Link>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import FilmPage from \"./FilmPage\";\r\n\r\nexport default FilmPage;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport { getFilmById } from \"../../utils/api\";\r\nimport * as CONSTANTS from \"../../utils/constants\";\r\nimport NotFoundPage from \"../NotFoundPage\";\r\nimport styles from \"./FilmPage.module.scss\";\r\n\r\nconst FilmPage = () => {\r\n  const { id: filmId } = useParams();\r\n  const [filmData, setFilmData] = useState();\r\n  const [error, setError] = useState(false);\r\n\r\n  const filmReleaseYear = filmData?.release_date.split(\"-\")[0];\r\n  const filmReleaseDate = filmData?.release_date.split(\"-\").join(\"/\");\r\n\r\n  const fetchFilmData = useCallback(async () => {\r\n    try {\r\n      const { movie_results } = await getFilmById(filmId);\r\n      const data = movie_results[0];\r\n      setFilmData(data);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  }, [filmId]);\r\n\r\n  useEffect(() => {\r\n    fetchFilmData();\r\n  }, [fetchFilmData]);\r\n\r\n  if (error) {\r\n    return <NotFoundPage />;\r\n  }\r\n\r\n  if (!filmData) {\r\n    return (\r\n      <div className={styles.spinner}>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {filmData && (\r\n        <>\r\n          <Row className={styles.content} xs={2} md={2}>\r\n            <Col xs md={4}>\r\n              <div className={styles.poster}>\r\n                <img\r\n                  src={`${CONSTANTS.IMAGE_DOMAIN}${filmData.poster_path}`}\r\n                  alt=\"Poster\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md={8}>\r\n              <div className={styles.info}>\r\n                <h2>\r\n                  {filmData.title}\r\n                  &nbsp;\r\n                  <span className={styles.filmReleaseYear}>\r\n                    ({filmReleaseYear})\r\n                  </span>\r\n                </h2>\r\n                <p className={styles.filmReleaseDate}>\r\n                  {filmReleaseDate}\r\n                  &nbsp;\r\n                  <span className={styles.originCountry}>\r\n                    ({filmData.original_language})\r\n                  </span>\r\n                </p>\r\n                <p className={styles.overview}>\r\n                  <span>Overview:</span>\r\n                  <br />\r\n                  {filmData.overview}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <div className={styles.background}>\r\n            <img\r\n              src={`${CONSTANTS.IMAGE_DOMAIN}${filmData.backdrop_path}`}\r\n              alt=\"Backdrop\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilmPage;\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faStar as faStarRegular } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faStar as faStarSolid } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faStarRegular, faStarSolid);\r\n","import { Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport styles from \"./FilmsListItem.module.scss\";\r\nimport { IMAGE_DOMAIN, ERROR_IMAGE_URL, ROUTES } from \"../../utils/constants\";\r\nimport \"../../utils/fontawasome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilmsListItem = (props) => {\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  const iconType = props.isFavorite ? \"fas\" : \"far\";\r\n\r\n  return (\r\n    <>\r\n      <Card className={styles.card}>\r\n        {props.backdropPath && (\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={`${IMAGE_DOMAIN}${props.backdropPath}`}\r\n            alt={props.backdropPath}\r\n          />\r\n        )}\r\n        {!props.backdropPath && (\r\n          <Card.Img variant=\"top\" src={ERROR_IMAGE_URL} />\r\n        )}\r\n        <Card.Body className={styles.body}>\r\n          <Card.Title as={Link} to={`${ROUTES.FILM_PAGE}/${props.id}`}>\r\n            {props.title}\r\n          </Card.Title>\r\n          <Card.Text>Rating: {props.rating}</Card.Text>\r\n        </Card.Body>\r\n        {isLoggedIn && (\r\n          <Card.Footer>\r\n            <FontAwesomeIcon\r\n              icon={[iconType, \"star\"]}\r\n              onClick={() => {\r\n                props.setFavoriteFilm(props.id, props.isFavorite);\r\n              }}\r\n            />\r\n          </Card.Footer>\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilmsListItem;\r\n","import FilmsListItem from \"./FilmsListItem\";\r\n\r\nexport default FilmsListItem;\r\n","import FilmsList from \"./FilmsList\";\r\n\r\nexport default FilmsList;\r\n","import React, { useContext } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport { setFavoriteFilm } from \"../../utils/api\";\r\nimport FilmsListItem from \"../FilmsListItem\";\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\nimport styles from \"./FilmsList.module.scss\";\r\n\r\nconst FilmsList = React.memo((props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  let filmsList;\r\n\r\n  const addFavoriteFilmHandler = (filmId) => {\r\n    authCtx.setFavoriteFilms((prevState) => [...prevState, filmId]);\r\n    setFavoriteFilm(true, filmId, authCtx.token);\r\n  };\r\n\r\n  const removeFavoriteFilmHandler = (filmId) => {\r\n    authCtx.setFavoriteFilms((prevState) =>\r\n      prevState.filter((itemId) => itemId !== filmId)\r\n    );\r\n    setFavoriteFilm(false, filmId, authCtx.token);\r\n  };\r\n\r\n  const favoriteFilmHandler = (filmId, isFavorite) => {\r\n    if (isFavorite) {\r\n      removeFavoriteFilmHandler(filmId);\r\n    } else {\r\n      addFavoriteFilmHandler(filmId);\r\n    }\r\n  };\r\n\r\n  if (props.status === \"completed\" && !!props.films.length) {\r\n    filmsList = (\r\n      <Row xs={1} md={2} xl={4} className=\"g-4\">\r\n        {props.films.map((filmItem) => (\r\n          <Col className=\"g-4\" key={filmItem.id}>\r\n            <FilmsListItem\r\n              setFavoriteFilm={favoriteFilmHandler}\r\n              isFavorite={authCtx.favoriteFilms.includes(filmItem.id)}\r\n              id={filmItem.id}\r\n              backdropPath={filmItem.backdrop_path}\r\n              title={filmItem.title}\r\n              rating={filmItem.vote_average}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  } else if (props.status === \"completed\" && !props.films.length) {\r\n    filmsList = <p>No movies found by these search criteria...</p>;\r\n  } else {\r\n    filmsList = <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.filmsList}>\r\n      {filmsList}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FilmsList;\r\n","import GenreItem from \"./GenreItem\";\r\n\r\nexport default GenreItem;\r\n","import { Form } from \"react-bootstrap\";\r\n\r\nconst GenreItem = ({ isSelected, ...props }) => {\r\n  const onCheckHandler = () => {\r\n    props.onSelect(!isSelected, props.id);\r\n  };\r\n\r\n  return (\r\n    <Form.Check\r\n      id={props.id}\r\n      type=\"checkbox\"\r\n      label={props.name}\r\n      checked={isSelected}\r\n      onChange={onCheckHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GenreItem;\r\n","import Genres from \"./Genres\";\r\n\r\nexport default Genres;\r\n","import React from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport GenreItem from \"../GenreItem\";\r\n\r\nconst Genres = ({ allGenresList, selectedGenresList, setGenresFilter }) => {\r\n  const onSelectHandler = (isSelected, genreId) => {\r\n    if (isSelected) {\r\n      setGenresFilter([...selectedGenresList, genreId]);\r\n    }\r\n\r\n    if (!isSelected) {\r\n      setGenresFilter(\r\n        selectedGenresList.filter((genreItem) => genreItem !== genreId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const resetGenresHandler = () => {\r\n    setGenresFilter([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={resetGenresHandler}\r\n        className=\"my-2 w-100\"\r\n        variant=\"outline-secondary\"\r\n      >\r\n        Show All Genres\r\n      </Button>\r\n      <Form.Group className=\"my-2\">\r\n        {!allGenresList && <Spinner animation=\"grow\" />}\r\n        {allGenresList &&\r\n          allGenresList.map((genreItem) => (\r\n            <GenreItem\r\n              isSelected={selectedGenresList.includes(genreItem.id)}\r\n              onSelect={onSelectHandler}\r\n              key={genreItem.id}\r\n              id={genreItem.id}\r\n              name={genreItem.name}\r\n            />\r\n          ))}\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import Pagination from \"./Pagination\";\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport * as CONSTANTS from \"../../../utils/constants\";\r\nimport styles from \"./Pagination.module.scss\";\r\n\r\nconst Pagination = (props) => {\r\n  const onClickHandler = (changeType) => {\r\n    props.setPageFilter(changeType, props.filteredPage);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      <div className={styles.buttons}>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          className=\"m-1 w-100\"\r\n          onClick={() => {\r\n            onClickHandler(CONSTANTS.PAGINATION_DECREASE);\r\n          }}\r\n        >\r\n          «\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          className=\"m-1 w-100\"\r\n          onClick={() => {\r\n            onClickHandler(CONSTANTS.PAGINATION_INCREASE);\r\n          }}\r\n        >\r\n          »\r\n        </Button>\r\n      </div>\r\n      <p className={styles.pages}>\r\n        <span>Page:</span> {props.filteredPage} of {props.totalPages}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import ReleaseYear from \"./ReleaseYear\";\r\n\r\nexport default ReleaseYear;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst ReleaseYear = React.memo((props) => {\r\n  const onChangeHandler = (event) => {\r\n    props.setYearFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Form.Group className=\"my-3\">\r\n      <Form.Label>Release year:</Form.Label>\r\n      <Form.Select\r\n        aria-label=\"Default select example\"\r\n        onChange={onChangeHandler}\r\n        value={props.filteredYear}\r\n      >\r\n        <option value=\"2022\">2022</option>\r\n        <option value=\"2021\">2021</option>\r\n        <option value=\"2020\">2020</option>\r\n        <option value=\"2019\">2019</option>\r\n        <option value=\"2018\">2018</option>\r\n      </Form.Select>\r\n    </Form.Group>\r\n  );\r\n});\r\nexport default ReleaseYear;\r\n","import ResetFilters from \"./ResetFilters\";\r\n\r\nexport default ResetFilters;\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nconst ResetFilters = (props) => {\r\n  const onClickHandler = () => {\r\n    props.resetFilters();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      className=\"w-100\"\r\n      variant=\"outline-secondary\"\r\n      onClick={onClickHandler}\r\n    >\r\n      Reset Filters\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ResetFilters;\r\n","import SortBy from \"./SortBy\";\r\n\r\nexport default SortBy;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst SortBy = React.memo((props) => {\r\n  const onChangeHandler = (event) => {\r\n    props.setSortingFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Form.Group className=\"my-3\">\r\n      <Form.Label>Sort by:</Form.Label>\r\n      <Form.Select\r\n        aria-label=\"Default select example\"\r\n        onChange={onChangeHandler}\r\n        value={props.filteredSorting}\r\n      >\r\n        <option value=\"popularity.desc\">Most Popular</option>\r\n        <option value=\"popularity.asc\">Least Popular</option>\r\n        <option value=\"vote_average.desc\">Most Wanted</option>\r\n        <option value=\"vote_average.asc\">Least Wanted</option>\r\n      </Form.Select>\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nexport default SortBy;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport styles from \"./Filters.module.scss\";\r\nimport Genres from \"./Genres\";\r\nimport Pagination from \"./Pagination\";\r\nimport ReleaseYear from \"./ReleaseYear\";\r\nimport ResetFilters from \"./ResetFilters\";\r\nimport SortBy from \"./SortBy\";\r\nimport * as CONSTANTS from \"../../utils/constants\";\r\n\r\nconst Filters = React.memo(\r\n  ({ totalPages, defaultFiltersState, setFilters, filters, ...props }) => {\r\n    // Functions to modify app.js filters state\r\n\r\n    const setPage = useCallback(\r\n      (changeType, prevPage) => {\r\n        let newPage;\r\n        if (changeType === CONSTANTS.PAGINATION_INCREASE) {\r\n          newPage = prevPage === totalPages ? totalPages : ++prevPage;\r\n        }\r\n\r\n        if (changeType === CONSTANTS.PAGINATION_DECREASE) {\r\n          newPage = prevPage === 1 ? 1 : --prevPage;\r\n        }\r\n\r\n        return { page: newPage };\r\n      },\r\n      [totalPages]\r\n    );\r\n\r\n    const setYear = useCallback((year) => {\r\n      return { year, page: 1 };\r\n    }, []);\r\n\r\n    const setSorting = useCallback((sorting) => {\r\n      return { sorting, page: 1 };\r\n    }, []);\r\n\r\n    const setGenres = useCallback((genres) => {\r\n      return { genres, page: 1 };\r\n    }, []);\r\n\r\n    const resetFilters = useCallback(() => {\r\n      return defaultFiltersState;\r\n    }, [defaultFiltersState]);\r\n\r\n    // Selecting the desired function\r\n\r\n    const setFunctions = useMemo(() => {\r\n      return {\r\n        PAGE: setPage,\r\n        YEAR: setYear,\r\n        SORT: setSorting,\r\n        GENRES: setGenres,\r\n        RESET: resetFilters,\r\n      };\r\n    }, [resetFilters, setGenres, setSorting, setYear, setPage]);\r\n\r\n    const setFiltersHandler = useCallback(\r\n      (filterType, ...args) => {\r\n        const propertiesToFilter = setFunctions[filterType](...args);\r\n\r\n        setFilters((prevState) => {\r\n          return { ...prevState, ...propertiesToFilter };\r\n        });\r\n      },\r\n      [setFilters, setFunctions]\r\n    );\r\n\r\n    // Filter handlers with preset types\r\n\r\n    const setGenresFilterHandler = useCallback(\r\n      (selectedGenres) => {\r\n        setFiltersHandler(\"GENRES\", selectedGenres);\r\n      },\r\n      [setFiltersHandler]\r\n    );\r\n\r\n    const setSortingFilterHandler = (sortingValue) => {\r\n      setFiltersHandler(\"SORT\", sortingValue);\r\n    };\r\n\r\n    const setYearFilterHandler = (releaseYear) => {\r\n      setFiltersHandler(\"YEAR\", releaseYear);\r\n    };\r\n\r\n    const setPageFilterHandler = (changeType, curPage) => {\r\n      setFiltersHandler(\"PAGE\", changeType, curPage);\r\n    };\r\n\r\n    const resetFiltersHandler = () => {\r\n      setFiltersHandler(\"RESET\");\r\n    };\r\n\r\n    return (\r\n      <div className={styles.filters}>\r\n        <h2>Filters:</h2>\r\n\r\n        <>\r\n          <ResetFilters resetFilters={resetFiltersHandler} />\r\n          <SortBy\r\n            setSortingFilter={setSortingFilterHandler}\r\n            filteredSorting={filters.sorting}\r\n          />\r\n          <ReleaseYear\r\n            setYearFilter={setYearFilterHandler}\r\n            filteredYear={filters.year}\r\n          />\r\n          <Genres\r\n            allGenresList={props.allGenresList.genres}\r\n            selectedGenresList={filters.genres}\r\n            setGenresFilter={setGenresFilterHandler}\r\n          />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setPageFilter={setPageFilterHandler}\r\n            filteredPage={filters.page}\r\n          />\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Filters;\r\n","import Filters from \"./Filters\";\r\n\r\nexport default Filters;\r\n","import { useCallback, useReducer } from \"react\";\r\nimport * as CONSTANTS from \"../utils/constants\";\r\n\r\nconst defaultMoviesState = {\r\n  data: {\r\n    results: [],\r\n    total_pages: 0,\r\n  },\r\n  error: null,\r\n  status: \"pending\",\r\n};\r\n\r\nconst moviesReducer = (state, action) => {\r\n  if (action.type === CONSTANTS.ACTION_SEND) {\r\n    return {\r\n      ...defaultMoviesState,\r\n      data: { ...state.data },\r\n    };\r\n  }\r\n\r\n  if (action.type === CONSTANTS.ACTION_SUCCESS) {\r\n    return {\r\n      data: { ...state.data, ...action.responseData },\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  if (action.type === CONSTANTS.ACTION_ERROR) {\r\n    return {\r\n      ...defaultMoviesState,\r\n      error: action.errorMessage,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst useMovies = (requestFunction, filters) => {\r\n  const [moviesState, dispatch] = useReducer(moviesReducer, defaultMoviesState);\r\n\r\n  const { page, year, sorting, genres } = filters;\r\n\r\n  const sendRequest = useCallback(\r\n    async function () {\r\n      dispatch({ type: CONSTANTS.ACTION_SEND });\r\n      try {\r\n        const responseData = await requestFunction(\r\n          page,\r\n          year,\r\n          sorting,\r\n          genres\r\n        );\r\n        dispatch({\r\n          type: CONSTANTS.ACTION_SUCCESS,\r\n          responseData: {\r\n            results: responseData.results,\r\n            total_pages: responseData.total_pages,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: CONSTANTS.ACTION_ERROR,\r\n          errorMessage: error.message || \"Something went wrong!\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction, page, year, sorting, genres]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...moviesState,\r\n  };\r\n};\r\n\r\nexport default useMovies;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport FilmsList from \"../../components/FilmsList\";\r\nimport Filters from \"../../components/Filters\";\r\nimport useMovies from \"../../hooks/useMovies\";\r\nimport { getFilms, getGenres } from \"../../utils/api\";\r\nimport { defaultFiltersState } from \"../../utils/constants\";\r\n\r\nconst HomePage = () => {\r\n  const [filters, setFilters] = useState(defaultFiltersState);\r\n  const [allGenresList, setAllGenresList] = useState([]);\r\n  const { sendRequest, status, data } = useMovies(getFilms, filters);\r\n\r\n  const fetchGenres = async () => {\r\n    const genres = await getGenres();\r\n    setAllGenresList(genres);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <Row>\r\n      <Col xs=\"5\" md=\"4\" lg=\"3\">\r\n        <Filters\r\n          status={status}\r\n          allGenresList={allGenresList}\r\n          totalPages={data.total_pages}\r\n          filters={filters}\r\n          setFilters={setFilters}\r\n          defaultFiltersState={defaultFiltersState}\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <FilmsList status={status} films={data.results} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import HomePage from \"./HomePage\";\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Routes } from \"react-router-dom\";\nimport AuthModal from \"./components/AuthModal\";\nimport Layout from \"./components/Layout\";\nimport FilmPage from \"./pages/FilmPage\";\nimport HomePage from \"./pages/HomePage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { ROUTES } from \"./utils/constants\";\n\nconst App = () => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  const hideModalHandler = () => setModalIsShown(false);\n\n  const showModalHandler = () => setModalIsShown(true);\n\n  const portalElement = document.getElementById(\"overlays\");\n\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <AuthModal\n          modalIsShown={modalIsShown}\n          onHideModal={hideModalHandler}\n        />,\n        portalElement\n      )}\n\n      <Layout onShowModal={showModalHandler}>\n        <Routes>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path={ROUTES.HOME_PAGE} element={<HomePage />} />\n          <Route path={ROUTES.FILM_PAGE + \"/:id\"} element={<FilmPage />} />\n        </Routes>\n      </Layout>\n    </>\n  );\n};\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"FilmPage_spinner__1DdBx\",\"background\":\"FilmPage_background__2y4oj\",\"content\":\"FilmPage_content__3o87m\",\"filmReleaseYear\":\"FilmPage_filmReleaseYear__2UP9T\",\"filmReleaseDate\":\"FilmPage_filmReleaseDate__2b-R0\",\"originCountry\":\"FilmPage_originCountry__3gi8a\",\"overview\":\"FilmPage_overview__1L0O4\",\"poster\":\"FilmPage_poster__1CNPF\",\"info\":\"FilmPage_info__3JIhu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3ExeI\",\"buttons\":\"Pagination_buttons__1Qwe4\",\"pages\":\"Pagination_pages__2toLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"NotFoundPage_image__1vNgq\",\"bottomContainer\":\"NotFoundPage_bottomContainer__2pSFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"FilmsListItem_card__3f1dp\",\"body\":\"FilmsListItem_body__9Onut\"};"],"sourceRoot":""}